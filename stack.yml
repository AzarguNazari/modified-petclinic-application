version: '3.7'

x-default-opts:
  &default-health-check
  replicas: 1
  restart_policy:
    condition: on-failure
    delay: 5s
    max_attempts: 3
    window: 120s

services:

  config-server:
    image: ${CONFIG_SERVICE}:${VERSION}
    deploy:
      <<: *default-health-check
      placement:
        constraints: [ node.labels.application == true ]
      replicas: 1
    logging:
      driver: json-file
      options:
        max-size: 100m
    networks:
      - application

  customers-service:
    image: ${CUSTOMER_SERVICE}:${VERSION}
    depends_on:
      - config-server
    environment:
      MYSQL_HOST: mysql
    deploy:
      <<: *default-health-check
      replicas: 5
      placement:
        constraints: [ node.labels.application == true ]
    logging:
      driver: json-file
      options:
        max-size: 100m
    networks:
      - application
      - database

  visits-service:
    image: ${VISIT_SERVICE}:${VERSION}
    depends_on:
      - config-server
    environment:
      MYSQL_HOST: mysql
      CONFIG_SERVER: config-server
      SPRING_BOOT_ADMIN: admin-server
    deploy:
      <<: *default-health-check
      replicas: 5
      placement:
        constraints: [ node.labels.application == true ]
    logging:
      driver: json-file
      options:
        max-size: 100m
    networks:
      - application
      - database


  vets-service:
    image: ${VET_SERVICE}:${VERSION}
    environment:
      - MYSQL_HOST=mysql
      - SPRING_BOOT_ADMIN=admin-server
      - CONFIG_SERVER=config-server
    deploy:
      <<: *default-health-check
      replicas: 5
      placement:
        constraints: [ node.labels.application == true ]
    depends_on:
      - config-server
    logging:
      driver: json-file
      options:
        max-size: 100m
    networks:
      - application
      - database

  api-gateway:
    image: ${GATEWAY_SERVICE}:${VERSION}
    deploy:
      <<: *default-health-check
      replicas: 1
      placement:
        constraints: [ node.labels.application == true ]
    depends_on:
      - config-server
    environment:
      - VETS_SERVICE=vets-service
      - VISIT_SERVICE=visits-service
      - CUSTOMER_SERVICE=customers-service
      - SPRING_BOOT_ADMIN=admin-server
      - CONFIG_SERVER=config-server
    logging:
      driver: json-file
      options:
        max-size: 100m
    networks:
      - application

  tracing-server:
    image: ${ZIPKIN}:latest
    deploy:
      <<: *default-health-check
      resources:
        limits:
          memory: 512M
      replicas: 1
      placement:
        constraints: [ node.labels.monitoring == true ]
    networks:
      - application
    logging:
      driver: json-file
      options:
        max-size: 100m
    environment:
      - JAVA_OPTS=-XX:+UnlockExperimentalVMOptions -Djava.security.egd=file:/dev/./urandom

  admin-server:
    image: ${ADMIN_SERVER_SERVICE}:${VERSION}
    deploy:
      <<: *default-health-check
      replicas: 1
      placement:
        constraints: [ node.labels.monitoring == true ]
    depends_on:
      - config-server
    networks:
      - application
    logging:
      driver: json-file
      options:
        max-size: 100m

  ## Grafana / Prometheus

  grafana-server:
    image: ${GRAFANA}
    deploy:
      <<: *default-health-check
      replicas: 1
      placement:
        constraints: [ node.labels.monitoring == true ]
    logging:
      driver: json-file
      options:
        max-size: 100m
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - application

  prometheus-server:
    image: ${PREMETHOUS}
    deploy:
      <<: *default-health-check
      replicas: 1
      placement:
        constraints: [ node.labels.monitoring == true ]
    networks:
      - application
    logging:
      driver: json-file
      options:
        max-size: 100m

  mysql:
    image: ${MYSQL}
    deploy:
      <<: *default-health-check
      placement:
        constraints: [ node.labels.application == true ]
    environment:
      MYSQL_ROOT_PASSWORD: petclinic
      MYSQL_DATABASE: petclinic
    logging:
      driver: json-file
      options:
        max-size: 100m
    networks:
      - database

  phpmyadmin:
    image: ${PHP_MYADMIN}
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    deploy:
      <<: *default-health-check
      placement:
        constraints: [ node.labels.application == true ]
    networks:
      - database
    logging:
      driver: json-file
      options:
        max-size: 100m

networks:
  database:
    external: true
  application:
    external: true
